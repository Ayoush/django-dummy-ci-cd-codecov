name: Prod Workflow
 
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
 
jobs:
  health-checkup-job:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ROOT_PASSWORD: django
          MYSQL_DATABASE: django_ci_cd
        ports: ['3306:3306']
  
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
 
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Migrations
        run: python manage.py migrate
        env: 
          APP_DB_ENGINE: django.db.backends.mysql
          APP_DB_NAME: django_ci_cd
          APP_DB_USER: root
          APP_DB_PASSWORD: postgres
          APP_DB_HOST: 127.0.0.1
          APP_DB_PORT: 3306
      - name: Run Tests
        run: |
          python manage.py test
        env: 
          APP_DB_ENGINE: django.db.backends.mysql
          APP_DB_NAME: django_ci_cd
          APP_DB_USER: root
          APP_DB_PASSWORD: postgres
          APP_DB_HOST: 127.0.0.1
          APP_DB_PORT: 3306
      - name: Coverage report
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report --fail-under=75 && coverage xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2        

  # deploy-job:
  #     runs-on: ubuntu-latest
  #     needs: [health-checkup-job]
  #     if: ${{ github.event_name == 'push' }}
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: akhileshns/heroku-deploy@v3.12.12
  #         with:
  #           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #           heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #           heroku_email: ${{secrets.HEROKU_EMAIL}}